import { FluxDispatcher } from '@vendetta/metro/common';
import { before, after} from "@vendetta/patcher"
import { findByProps } from "@vendetta/metro"
import { logger } from "@vendetta"
const FD = FluxDispatcher._actionHandlers._orderedActionHandlers;

const patches = [];

const RowManager = findByName("RowManager");

patches.push(before("actionHandler", FD.MESSAGE_UPDATE?.find(i => i.name === "MessageStore"), (args: any) => {
                
                let msgantiga = findByProps("getMessage", "getMessages").getMessage(args[0].message.channel_id, args[0].message.id).content
                
                let message = args[0].message.content;
                
                    message = msgantiga + " `[edited]`\n" + message;
            }));



export const onUnload = () => patches.forEach((unpatch) => unpatch());
